LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.NUMERIC_STD.ALL;
USE IEEE.STD_LOGIC_UNSIGNED.ALL;
USE IEEE.MATH_REAL.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;

ENTITY KALKULATOR IS
PORT (A 		: OUT STD_LOGIC_VECTOR (6 	DOWNTO 0);
      B 		: OUT STD_LOGIC_VECTOR (6 	DOWNTO 0);
		C 		: OUT STD_LOGIC_VECTOR (7 	DOWNTO 0);
		D 		: OUT STD_LOGIC_VECTOR (6 	DOWNTO 0);
		E 		: OUT STD_LOGIC_VECTOR (13 DOWNTO 0);
		F 		: OUT STD_LOGIC_VECTOR (6 	DOWNTO 0);
		G 		: OUT STD_LOGIC_VECTOR (15 DOWNTO 0);
		SEL 	: IN 	STD_LOGIC_VECTOR (1 	DOWNTO 0);
		RESET : IN 	STD_LOGIC;
		MODE 	: IN 	STD_LOGIC_VECTOR (2 	DOWNTO 0));
END KALKULATOR;

ARCHITECTURE HASIL OF KALKULATOR IS
SIGNAL NUM1 : INTEGER RANGE 0 TO 99  := 00;
SIGNAL NUM2 : INTEGER RANGE 0 TO 99  := 00;
SIGNAL ADD  : INTEGER RANGE 0 TO 199 := 000;
SIGNAL SUB 	: INTEGER RANGE 0 TO 99  := 00;
SIGNAL MUL 	: INTEGER RANGE 0 TO 9999  := 0000;
SIGNAL DIV 	: INTEGER RANGE 0 TO 99  := 00;
SIGNAL DIRECTORY : INTEGER RANGE 0 TO 99999  := 00000;

BEGIN
A <= CONV_STD_LOGIC_VECTOR(NUM1, 7);
B <= CONV_STD_LOGIC_VECTOR(NUM2, 7);
C <= CONV_STD_LOGIC_VECTOR(ADD , 8);
D <= CONV_STD_LOGIC_VECTOR(SUB , 7);
E <= CONV_STD_LOGIC_VECTOR(MUL , 14);
F <= CONV_STD_LOGIC_VECTOR(DIV , 7);
G <= CONV_STD_LOGIC_VECTOR(DIRECTORY , 16);

PROCESS(RESET)
BEGIN
   IF (RESET ='0' AND MODE ="000") THEN DIRECTORY <= ADD + SUB + MUL + DIV;
   CASE SELECTOR IS
      WHEN "000" => ADD <= NUM1 + NUM2;
      WHEN "001" => SUB <= NUM1 - NUM2;
      WHEN "010" => MUL <= NUM1 * NUM2;
      WHEN "011" => DIV <= NUM1 / NUM2;
		WHEN OTHERS => NULL;
   END CASE;
  
	ELSE IF (RESET ='0' AND MODE ="001") THEN DIRECTORY <= ADD + SUB + MUL + DIV;
	CASE SELECTOR IS
      WHEN "000" => ADD <= NUM1 + DIRECTORY;
      WHEN "001" => SUB <= NUM1 - DIRECTORY;
      WHEN "010" => MUL <= NUM1 * DIRECTORY;
      WHEN "011" => DIV <= DIRECTORY / NUM2;
   WHEN OTHERS => NULL;
   END CASE;
  
	ELSE IF (RESET ='0' AND MODE ="010") THEN
	DIRECTORY <= ADD + SUB + MUL + DIV;
	CASE SELECTOR IS
      WHEN "000" => ADD <= NUM2 + DIRECTORY;
      WHEN "001" => SUB <= NUM2 - DIRECTORY;
      WHEN "010" => MUL <= NUM2 * DIRECTORY;
      WHEN "011" => DIV <= DIRECTORY / NUM2;
		WHEN OTHERS => NULL;
   END CASE;
	ELSE  NUM1 <= 0;
			NUM2 <= 0;
			ADD  <= 0;
			SUB  <= 0;
			MUL  <= 0;
			DIV  <= 0;
			DIRECTORY <= 0;
	END IF;
	END IF;
	END IF;
	END PROCESS;
END HASIL;